/*
================================================================================
  DOCUMENTA√á√ÉO: ESTUDO DE JOINs EM SQL
================================================================================

üìö CONCEITOS FUNDAMENTAIS
-------------------------
O que √© JOIN?
  JOIN √© uma opera√ß√£o que combina linhas de duas ou mais tabelas baseado em 
  uma condi√ß√£o de relacionamento entre elas (geralmente chaves estrangeiras).

INNER JOIN:
  Retorna apenas os registros que possuem correspond√™ncia em AMBAS as tabelas.

================================================================================
*/


-- =============================================================================
-- 1. CONSULTAS EXPLORAT√ìRIAS SIMPLES
-- =============================================================================
-- Objetivo: Conhecer a estrutura e os dados das tabelas antes de combin√°-las.

SELECT * FROM TABELA_DE_VENDEDORES;

SELECT * FROM NOTAS_FISCAIS;

-- =============================================================================
-- 2. CONTAGEM SEM JOIN (INCOMPLETA)
-- =============================================================================
-- ‚ö†Ô∏è PROBLEMA: Esta query est√° INCOMPLETA - falta o GROUP BY
-- - Mostra apenas a matr√≠cula, sem o nome do vendedor
-- - N√£o h√° relacionamento com a tabela de vendedores

SELECT MATRICULA, COUNT(*) AS NUMERO_NOTAS FROM NOTAS_FISCAIS;

-- =============================================================================
-- 3. PRIMEIRO JOIN - CONTAGEM POR VENDEDOR
-- =============================================================================
-- O que faz:
-- - Combina as duas tabelas pela matr√≠cula
-- - Conta quantas notas fiscais cada vendedor emitiu
-- - Agrupa por matr√≠cula e nome
--
-- ‚ö†Ô∏è AMBIGUIDADE: MATRICULA existe nas duas tabelas - pode gerar erro

SELECT MATRICULA, NOME, COUNT(*) AS NUMERO_NOTAS FROM NOTAS_FISCAIS 
INNER JOIN TABELA_DE_VENDEDORES 
ON NOTAS_FISCAIS.MATRICULA = TABELA_DE_VENDEDORES.MATRICULA 
GROUP BY MATRICULA, NOME;

-- =============================================================================
-- 4. JOIN COM QUALIFICA√á√ÉO DE COLUNAS
-- =============================================================================
-- ‚úÖ MELHORIA: Qualifica explicitamente de qual tabela vem cada coluna
-- - NOTAS_FISCAIS.MATRICULA
-- - TABELA_DE_VENDEDORES.NOME
--
-- BENEF√çCIO: Elimina ambiguidade e melhora a legibilidade

SELECT NOTAS_FISCAIS.MATRICULA, TABELA_DE_VENDEDORES.NOME, COUNT(*) AS NUMERO_NOTAS 
FROM NOTAS_FISCAIS 
INNER JOIN TABELA_DE_VENDEDORES 
ON NOTAS_FISCAIS.MATRICULA = TABELA_DE_VENDEDORES.MATRICULA 
GROUP BY NOTAS_FISCAIS.MATRICULA, TABELA_DE_VENDEDORES.NOME;

-- =============================================================================
-- 5. JOIN COM ALIAS (FORMA OTIMIZADA) ‚≠ê
-- =============================================================================
-- ‚úÖ MELHOR PR√ÅTICA:
-- - NF = alias para NOTAS_FISCAIS
-- - TV = alias para TABELA_DE_VENDEDORES
-- - C√≥digo mais limpo e f√°cil de ler
-- - Reduz digita√ß√£o e possibilidade de erros

SELECT NF.MATRICULA, TV.NOME, COUNT(*) AS NUMERO_NOTAS 
FROM NOTAS_FISCAIS NF 
INNER JOIN TABELA_DE_VENDEDORES TV 
ON NF.MATRICULA = TV.MATRICULA 
-- Agrupamento pelos campos MATRICULA e NOME para contar notas fiscais por vendedor
GROUP BY NF.MATRICULA, TV.NOME;

-- =============================================================================
-- 6. INVERTENDO A ORDEM DO JOIN
-- =============================================================================
-- üìå APRENDIZADO IMPORTANTE:
-- - A ordem das tabelas no INNER JOIN N√ÉO AFETA O RESULTADO
-- - FROM TV INNER JOIN NF = FROM NF INNER JOIN TV
-- - O resultado √© o mesmo, apenas a sequ√™ncia de processamento pode variar

SELECT NF.MATRICULA, TV.NOME, COUNT(*) AS NUMERO_NOTAS 
FROM TABELA_DE_VENDEDORES TV  
INNER JOIN NOTAS_FISCAIS NF
ON NF.MATRICULA = TV.MATRICULA 
GROUP BY NF.MATRICULA, TV.NOME;

/*
================================================================================
  üéØ RESUMO DAS BOAS PR√ÅTICAS
================================================================================

PR√ÅTICA                 | EXEMPLO                      | BENEF√çCIO
------------------------|------------------------------|---------------------------
Usar ALIAS              | FROM NOTAS_FISCAIS NF        | C√≥digo mais limpo
Qualificar colunas      | NF.MATRICULA                 | Evita ambiguidade
Documentar              | -- Agrupamento por vendedor  | Facilita manuten√ß√£o
GROUP BY ap√≥s JOIN      | Sempre com COUNT, SUM, etc.  | Resultados corretos

================================================================================
  üí° CONCEITOS-CHAVE PARA ESTUDAR
================================================================================

1. RELACIONAMENTO 1:N
   Um vendedor pode ter v√°rias notas fiscais

2. CHAVE ESTRANGEIRA
   MATRICULA em NOTAS_FISCAIS referencia TABELA_DE_VENDEDORES

3. AGREGA√á√ÉO
   COUNT(*) com GROUP BY para estat√≠sticas

4. QUALIFICA√á√ÉO DE COLUNAS
   Tabela.Coluna ou Alias.Coluna

================================================================================
  üîÑ PR√ìXIMOS PASSOS DE ESTUDO
================================================================================

- LEFT JOIN:        Para incluir vendedores sem notas fiscais
- RIGHT JOIN:       Para visualizar notas sem vendedor associado
- FULL OUTER JOIN:  Combina√ß√£o de LEFT e RIGHT
- CROSS JOIN:       Produto cartesiano entre tabelas

================================================================================
*/